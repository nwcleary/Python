def odd_letters(x):
    for index in range(len(x)):
        if(index % 2 != 0):
            print(x[index])
            
odd_letters(x = input("Enter your string:\n"))

# WORK IN PROGRESS

def odd_letters():
    word = input("What is your word?\n")
    word_length = len(word)
    new_word = ""

    for index in range(word_length):
        old = ord(word[index])
        if(old % 2 != 0):
            new_word += chr(old)
            index += 1
    return new_word
            
new_word = odd_letters()
print("The even letters within the word:", new_word

## SLIGHTLY CLEANER VERSION 

def odd_letters(word):
    word_length = len(word)
    new_word = ""

    for index in range(word_length):
        old = ord(word[index])
        if(old % 2 != 0):
            new_word += chr(old)
            index += 1
    print("even letters:",new_word)
            
word = input("What is your word?\n")
odd_letters(word)

## I GUESS THIS WORKS(COMBINATION OF @ND TO LAST AND FIRST CODE BLOCKS
def odd_letters(word):
    new_word = ""
    
    for index in range(len(word)):
        if(index % 2 == 0):
            new_word += (word[index])
    return new_word
         
print (odd_letters(word = "cat"))

## WITH RETURN 

def odd_letters():
    
    word = input("What is your word?\n")
    new_word = ""
    
    for index in range(len(word)):
        old = ord(word[index])
        if(old % 2 != 0):
            new_word += chr(old)
            index += 1
    return (print("even letters:",new_word))
            

odd_letters()


## CLEANED UP RETURN 

def odd_letters(word):
    new_word = ""
    
    for index in range(len(word)):
        old = ord(word[index])
        if(old % 2 == 0):
            new_word += chr(old)
            index += 1
    return new_word
         
print (odd_letters(word = "abcdefghijklmnopqrstuvwyxz"))
